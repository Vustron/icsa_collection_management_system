#!/bin/sh

echo "Running Laravel Tests..."
php artisan test --parallel

# Store test result
TEST_STATUS=$?

if [ $TEST_STATUS -ne 0 ]; then
    echo "Tests failed! Commit aborted."
    exit 1
fi

# Run PHP lint
echo "Running PHP Lint..."
find app tests -name "*.php" -exec php -l {} \;

# Store lint result
LINT_STATUS=$?

if [ $LINT_STATUS -ne 0 ]; then
    echo "PHP Lint failed! Commit aborted."
    exit 1
fi

# Get the current version from package.json
current_version=$(node -p "require('./package.json').version")

# Split the version into major, minor, and patch
IFS='.' read -r major minor patch <<< "$current_version"

# Increment the patch version
new_patch=$((patch + 1))
new_version="$major.$minor.$new_patch"

# Update package.json with the new version
if [ "$(uname)" = "Darwin" ]; then
    # macOS
    sed -i '' "s/\"version\": \"$current_version\"/\"version\": \"$new_version\"/" package.json
else
    # Windows/Linux
    sed -i "s/\"version\": \"$current_version\"/\"version\": \"$new_version\"/" package.json
fi

# Stage the updated package.json
git add package.json

exit 0
